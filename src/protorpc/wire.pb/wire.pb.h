// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: wire.proto

#ifndef PROTOBUF_wire_2eproto__INCLUDED
#define PROTOBUF_wire_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protorpc {
namespace wire {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_wire_2eproto();
void protobuf_AssignDesc_wire_2eproto();
void protobuf_ShutdownFile_wire_2eproto();

class RequestHeader;
class ResponseHeader;

// ===================================================================

class RequestHeader : public ::google::protobuf::Message {
 public:
  RequestHeader();
  virtual ~RequestHeader();

  RequestHeader(const RequestHeader& from);

  inline RequestHeader& operator=(const RequestHeader& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestHeader& default_instance();

  void Swap(RequestHeader* other);

  // implements Message ----------------------------------------------

  inline RequestHeader* New() const { return New(NULL); }

  RequestHeader* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestHeader& from);
  void MergeFrom(const RequestHeader& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RequestHeader* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // optional string method = 2;
  void clear_method();
  static const int kMethodFieldNumber = 2;
  const ::std::string& method() const;
  void set_method(const ::std::string& value);
  void set_method(const char* value);
  void set_method(const char* value, size_t size);
  ::std::string* mutable_method();
  ::std::string* release_method();
  void set_allocated_method(::std::string* method);

  // optional uint32 raw_request_len = 3;
  void clear_raw_request_len();
  static const int kRawRequestLenFieldNumber = 3;
  ::google::protobuf::uint32 raw_request_len() const;
  void set_raw_request_len(::google::protobuf::uint32 value);

  // optional uint32 snappy_compressed_request_len = 4;
  void clear_snappy_compressed_request_len();
  static const int kSnappyCompressedRequestLenFieldNumber = 4;
  ::google::protobuf::uint32 snappy_compressed_request_len() const;
  void set_snappy_compressed_request_len(::google::protobuf::uint32 value);

  // optional uint32 checksum = 5;
  void clear_checksum();
  static const int kChecksumFieldNumber = 5;
  ::google::protobuf::uint32 checksum() const;
  void set_checksum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protorpc.wire.RequestHeader)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::internal::ArenaStringPtr method_;
  ::google::protobuf::uint32 raw_request_len_;
  ::google::protobuf::uint32 snappy_compressed_request_len_;
  ::google::protobuf::uint32 checksum_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_wire_2eproto();
  friend void protobuf_AssignDesc_wire_2eproto();
  friend void protobuf_ShutdownFile_wire_2eproto();

  void InitAsDefaultInstance();
  static RequestHeader* default_instance_;
};
// -------------------------------------------------------------------

class ResponseHeader : public ::google::protobuf::Message {
 public:
  ResponseHeader();
  virtual ~ResponseHeader();

  ResponseHeader(const ResponseHeader& from);

  inline ResponseHeader& operator=(const ResponseHeader& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResponseHeader& default_instance();

  void Swap(ResponseHeader* other);

  // implements Message ----------------------------------------------

  inline ResponseHeader* New() const { return New(NULL); }

  ResponseHeader* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResponseHeader& from);
  void MergeFrom(const ResponseHeader& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ResponseHeader* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // optional string error = 2;
  void clear_error();
  static const int kErrorFieldNumber = 2;
  const ::std::string& error() const;
  void set_error(const ::std::string& value);
  void set_error(const char* value);
  void set_error(const char* value, size_t size);
  ::std::string* mutable_error();
  ::std::string* release_error();
  void set_allocated_error(::std::string* error);

  // optional uint32 raw_response_len = 3;
  void clear_raw_response_len();
  static const int kRawResponseLenFieldNumber = 3;
  ::google::protobuf::uint32 raw_response_len() const;
  void set_raw_response_len(::google::protobuf::uint32 value);

  // optional uint32 snappy_compressed_response_len = 4;
  void clear_snappy_compressed_response_len();
  static const int kSnappyCompressedResponseLenFieldNumber = 4;
  ::google::protobuf::uint32 snappy_compressed_response_len() const;
  void set_snappy_compressed_response_len(::google::protobuf::uint32 value);

  // optional uint32 checksum = 5;
  void clear_checksum();
  static const int kChecksumFieldNumber = 5;
  ::google::protobuf::uint32 checksum() const;
  void set_checksum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protorpc.wire.ResponseHeader)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::internal::ArenaStringPtr error_;
  ::google::protobuf::uint32 raw_response_len_;
  ::google::protobuf::uint32 snappy_compressed_response_len_;
  ::google::protobuf::uint32 checksum_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_wire_2eproto();
  friend void protobuf_AssignDesc_wire_2eproto();
  friend void protobuf_ShutdownFile_wire_2eproto();

  void InitAsDefaultInstance();
  static ResponseHeader* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// RequestHeader

// optional uint64 id = 1;
inline void RequestHeader::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 RequestHeader::id() const {
  // @@protoc_insertion_point(field_get:protorpc.wire.RequestHeader.id)
  return id_;
}
inline void RequestHeader::set_id(::google::protobuf::uint64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:protorpc.wire.RequestHeader.id)
}

// optional string method = 2;
inline void RequestHeader::clear_method() {
  method_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RequestHeader::method() const {
  // @@protoc_insertion_point(field_get:protorpc.wire.RequestHeader.method)
  return method_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RequestHeader::set_method(const ::std::string& value) {
  
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protorpc.wire.RequestHeader.method)
}
inline void RequestHeader::set_method(const char* value) {
  
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protorpc.wire.RequestHeader.method)
}
inline void RequestHeader::set_method(const char* value, size_t size) {
  
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protorpc.wire.RequestHeader.method)
}
inline ::std::string* RequestHeader::mutable_method() {
  
  // @@protoc_insertion_point(field_mutable:protorpc.wire.RequestHeader.method)
  return method_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RequestHeader::release_method() {
  
  return method_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RequestHeader::set_allocated_method(::std::string* method) {
  if (method != NULL) {
    
  } else {
    
  }
  method_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), method);
  // @@protoc_insertion_point(field_set_allocated:protorpc.wire.RequestHeader.method)
}

// optional uint32 raw_request_len = 3;
inline void RequestHeader::clear_raw_request_len() {
  raw_request_len_ = 0u;
}
inline ::google::protobuf::uint32 RequestHeader::raw_request_len() const {
  // @@protoc_insertion_point(field_get:protorpc.wire.RequestHeader.raw_request_len)
  return raw_request_len_;
}
inline void RequestHeader::set_raw_request_len(::google::protobuf::uint32 value) {
  
  raw_request_len_ = value;
  // @@protoc_insertion_point(field_set:protorpc.wire.RequestHeader.raw_request_len)
}

// optional uint32 snappy_compressed_request_len = 4;
inline void RequestHeader::clear_snappy_compressed_request_len() {
  snappy_compressed_request_len_ = 0u;
}
inline ::google::protobuf::uint32 RequestHeader::snappy_compressed_request_len() const {
  // @@protoc_insertion_point(field_get:protorpc.wire.RequestHeader.snappy_compressed_request_len)
  return snappy_compressed_request_len_;
}
inline void RequestHeader::set_snappy_compressed_request_len(::google::protobuf::uint32 value) {
  
  snappy_compressed_request_len_ = value;
  // @@protoc_insertion_point(field_set:protorpc.wire.RequestHeader.snappy_compressed_request_len)
}

// optional uint32 checksum = 5;
inline void RequestHeader::clear_checksum() {
  checksum_ = 0u;
}
inline ::google::protobuf::uint32 RequestHeader::checksum() const {
  // @@protoc_insertion_point(field_get:protorpc.wire.RequestHeader.checksum)
  return checksum_;
}
inline void RequestHeader::set_checksum(::google::protobuf::uint32 value) {
  
  checksum_ = value;
  // @@protoc_insertion_point(field_set:protorpc.wire.RequestHeader.checksum)
}

// -------------------------------------------------------------------

// ResponseHeader

// optional uint64 id = 1;
inline void ResponseHeader::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ResponseHeader::id() const {
  // @@protoc_insertion_point(field_get:protorpc.wire.ResponseHeader.id)
  return id_;
}
inline void ResponseHeader::set_id(::google::protobuf::uint64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:protorpc.wire.ResponseHeader.id)
}

// optional string error = 2;
inline void ResponseHeader::clear_error() {
  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ResponseHeader::error() const {
  // @@protoc_insertion_point(field_get:protorpc.wire.ResponseHeader.error)
  return error_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResponseHeader::set_error(const ::std::string& value) {
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protorpc.wire.ResponseHeader.error)
}
inline void ResponseHeader::set_error(const char* value) {
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protorpc.wire.ResponseHeader.error)
}
inline void ResponseHeader::set_error(const char* value, size_t size) {
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protorpc.wire.ResponseHeader.error)
}
inline ::std::string* ResponseHeader::mutable_error() {
  
  // @@protoc_insertion_point(field_mutable:protorpc.wire.ResponseHeader.error)
  return error_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ResponseHeader::release_error() {
  
  return error_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResponseHeader::set_allocated_error(::std::string* error) {
  if (error != NULL) {
    
  } else {
    
  }
  error_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error);
  // @@protoc_insertion_point(field_set_allocated:protorpc.wire.ResponseHeader.error)
}

// optional uint32 raw_response_len = 3;
inline void ResponseHeader::clear_raw_response_len() {
  raw_response_len_ = 0u;
}
inline ::google::protobuf::uint32 ResponseHeader::raw_response_len() const {
  // @@protoc_insertion_point(field_get:protorpc.wire.ResponseHeader.raw_response_len)
  return raw_response_len_;
}
inline void ResponseHeader::set_raw_response_len(::google::protobuf::uint32 value) {
  
  raw_response_len_ = value;
  // @@protoc_insertion_point(field_set:protorpc.wire.ResponseHeader.raw_response_len)
}

// optional uint32 snappy_compressed_response_len = 4;
inline void ResponseHeader::clear_snappy_compressed_response_len() {
  snappy_compressed_response_len_ = 0u;
}
inline ::google::protobuf::uint32 ResponseHeader::snappy_compressed_response_len() const {
  // @@protoc_insertion_point(field_get:protorpc.wire.ResponseHeader.snappy_compressed_response_len)
  return snappy_compressed_response_len_;
}
inline void ResponseHeader::set_snappy_compressed_response_len(::google::protobuf::uint32 value) {
  
  snappy_compressed_response_len_ = value;
  // @@protoc_insertion_point(field_set:protorpc.wire.ResponseHeader.snappy_compressed_response_len)
}

// optional uint32 checksum = 5;
inline void ResponseHeader::clear_checksum() {
  checksum_ = 0u;
}
inline ::google::protobuf::uint32 ResponseHeader::checksum() const {
  // @@protoc_insertion_point(field_get:protorpc.wire.ResponseHeader.checksum)
  return checksum_;
}
inline void ResponseHeader::set_checksum(::google::protobuf::uint32 value) {
  
  checksum_ = value;
  // @@protoc_insertion_point(field_set:protorpc.wire.ResponseHeader.checksum)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace wire
}  // namespace protorpc

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_wire_2eproto__INCLUDED
