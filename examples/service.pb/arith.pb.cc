// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: arith.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "arith.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace service {

namespace {

const ::google::protobuf::Descriptor* ArithRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ArithRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ArithResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ArithResponse_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_arith_2eproto() {
  protobuf_AddDesc_arith_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "arith.proto");
  GOOGLE_CHECK(file != NULL);
  ArithRequest_descriptor_ = file->message_type(0);
  static const int ArithRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ArithRequest, a_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ArithRequest, b_),
  };
  ArithRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ArithRequest_descriptor_,
      ArithRequest::default_instance_,
      ArithRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(ArithRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ArithRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ArithRequest, _is_default_instance_));
  ArithResponse_descriptor_ = file->message_type(1);
  static const int ArithResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ArithResponse, c_),
  };
  ArithResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ArithResponse_descriptor_,
      ArithResponse::default_instance_,
      ArithResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(ArithResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ArithResponse, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ArithResponse, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_arith_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ArithRequest_descriptor_, &ArithRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ArithResponse_descriptor_, &ArithResponse::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_arith_2eproto() {
  delete ArithRequest::default_instance_;
  delete ArithRequest_reflection_;
  delete ArithResponse::default_instance_;
  delete ArithResponse_reflection_;
}

void protobuf_AddDesc_arith_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\013arith.proto\022\007service\"$\n\014ArithRequest\022\t"
    "\n\001a\030\001 \001(\005\022\t\n\001b\030\002 \001(\005\"\032\n\rArithResponse\022\t\n"
    "\001c\030\001 \001(\0052\350\001\n\014ArithService\0224\n\003add\022\025.servi"
    "ce.ArithRequest\032\026.service.ArithResponse\022"
    "4\n\003mul\022\025.service.ArithRequest\032\026.service."
    "ArithResponse\0224\n\003div\022\025.service.ArithRequ"
    "est\032\026.service.ArithResponse\0226\n\005error\022\025.s"
    "ervice.ArithRequest\032\026.service.ArithRespo"
    "nseB\003\200\001\000b\006proto3", 336);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "arith.proto", &protobuf_RegisterTypes);
  ArithRequest::default_instance_ = new ArithRequest();
  ArithResponse::default_instance_ = new ArithResponse();
  ArithRequest::default_instance_->InitAsDefaultInstance();
  ArithResponse::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_arith_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_arith_2eproto {
  StaticDescriptorInitializer_arith_2eproto() {
    protobuf_AddDesc_arith_2eproto();
  }
} static_descriptor_initializer_arith_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ArithRequest::kAFieldNumber;
const int ArithRequest::kBFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ArithRequest::ArithRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:service.ArithRequest)
}

void ArithRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ArithRequest::ArithRequest(const ArithRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:service.ArithRequest)
}

void ArithRequest::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  a_ = 0;
  b_ = 0;
}

ArithRequest::~ArithRequest() {
  // @@protoc_insertion_point(destructor:service.ArithRequest)
  SharedDtor();
}

void ArithRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ArithRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ArithRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ArithRequest_descriptor_;
}

const ArithRequest& ArithRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_arith_2eproto();
  return *default_instance_;
}

ArithRequest* ArithRequest::default_instance_ = NULL;

ArithRequest* ArithRequest::New(::google::protobuf::Arena* arena) const {
  ArithRequest* n = new ArithRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ArithRequest::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ArithRequest*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(a_, b_);

#undef ZR_HELPER_
#undef ZR_

}

bool ArithRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service.ArithRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 a = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &a_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_b;
        break;
      }

      // optional int32 b = 2;
      case 2: {
        if (tag == 16) {
         parse_b:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &b_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service.ArithRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service.ArithRequest)
  return false;
#undef DO_
}

void ArithRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service.ArithRequest)
  // optional int32 a = 1;
  if (this->a() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->a(), output);
  }

  // optional int32 b = 2;
  if (this->b() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->b(), output);
  }

  // @@protoc_insertion_point(serialize_end:service.ArithRequest)
}

::google::protobuf::uint8* ArithRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:service.ArithRequest)
  // optional int32 a = 1;
  if (this->a() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->a(), target);
  }

  // optional int32 b = 2;
  if (this->b() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->b(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:service.ArithRequest)
  return target;
}

int ArithRequest::ByteSize() const {
  int total_size = 0;

  // optional int32 a = 1;
  if (this->a() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->a());
  }

  // optional int32 b = 2;
  if (this->b() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->b());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ArithRequest::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ArithRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ArithRequest>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ArithRequest::MergeFrom(const ArithRequest& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.a() != 0) {
    set_a(from.a());
  }
  if (from.b() != 0) {
    set_b(from.b());
  }
}

void ArithRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ArithRequest::CopyFrom(const ArithRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ArithRequest::IsInitialized() const {

  return true;
}

void ArithRequest::Swap(ArithRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ArithRequest::InternalSwap(ArithRequest* other) {
  std::swap(a_, other->a_);
  std::swap(b_, other->b_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ArithRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ArithRequest_descriptor_;
  metadata.reflection = ArithRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ArithRequest

// optional int32 a = 1;
void ArithRequest::clear_a() {
  a_ = 0;
}
 ::google::protobuf::int32 ArithRequest::a() const {
  // @@protoc_insertion_point(field_get:service.ArithRequest.a)
  return a_;
}
 void ArithRequest::set_a(::google::protobuf::int32 value) {
  
  a_ = value;
  // @@protoc_insertion_point(field_set:service.ArithRequest.a)
}

// optional int32 b = 2;
void ArithRequest::clear_b() {
  b_ = 0;
}
 ::google::protobuf::int32 ArithRequest::b() const {
  // @@protoc_insertion_point(field_get:service.ArithRequest.b)
  return b_;
}
 void ArithRequest::set_b(::google::protobuf::int32 value) {
  
  b_ = value;
  // @@protoc_insertion_point(field_set:service.ArithRequest.b)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ArithResponse::kCFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ArithResponse::ArithResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:service.ArithResponse)
}

void ArithResponse::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ArithResponse::ArithResponse(const ArithResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:service.ArithResponse)
}

void ArithResponse::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  c_ = 0;
}

ArithResponse::~ArithResponse() {
  // @@protoc_insertion_point(destructor:service.ArithResponse)
  SharedDtor();
}

void ArithResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ArithResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ArithResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ArithResponse_descriptor_;
}

const ArithResponse& ArithResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_arith_2eproto();
  return *default_instance_;
}

ArithResponse* ArithResponse::default_instance_ = NULL;

ArithResponse* ArithResponse::New(::google::protobuf::Arena* arena) const {
  ArithResponse* n = new ArithResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ArithResponse::Clear() {
  c_ = 0;
}

bool ArithResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service.ArithResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 c = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &c_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service.ArithResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service.ArithResponse)
  return false;
#undef DO_
}

void ArithResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service.ArithResponse)
  // optional int32 c = 1;
  if (this->c() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->c(), output);
  }

  // @@protoc_insertion_point(serialize_end:service.ArithResponse)
}

::google::protobuf::uint8* ArithResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:service.ArithResponse)
  // optional int32 c = 1;
  if (this->c() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->c(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:service.ArithResponse)
  return target;
}

int ArithResponse::ByteSize() const {
  int total_size = 0;

  // optional int32 c = 1;
  if (this->c() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->c());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ArithResponse::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ArithResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ArithResponse>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ArithResponse::MergeFrom(const ArithResponse& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.c() != 0) {
    set_c(from.c());
  }
}

void ArithResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ArithResponse::CopyFrom(const ArithResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ArithResponse::IsInitialized() const {

  return true;
}

void ArithResponse::Swap(ArithResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ArithResponse::InternalSwap(ArithResponse* other) {
  std::swap(c_, other->c_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ArithResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ArithResponse_descriptor_;
  metadata.reflection = ArithResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ArithResponse

// optional int32 c = 1;
void ArithResponse::clear_c() {
  c_ = 0;
}
 ::google::protobuf::int32 ArithResponse::c() const {
  // @@protoc_insertion_point(field_get:service.ArithResponse.c)
  return c_;
}
 void ArithResponse::set_c(::google::protobuf::int32 value) {
  
  c_ = value;
  // @@protoc_insertion_point(field_set:service.ArithResponse.c)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace service

// @@protoc_insertion_point(global_scope)
